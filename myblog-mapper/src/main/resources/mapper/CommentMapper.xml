<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myblog.mapper.CommentMapper">
  <resultMap id="BaseResultMap" type="com.myblog.model.Comment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="blog_id" jdbcType="INTEGER" property="blogId" />
    <result column="create_user_id" jdbcType="INTEGER" property="createUserId" />
    <result column="create_user_name" jdbcType="VARCHAR" property="createUserName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="is_usable" jdbcType="BIT" property="isUsable" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.myblog.model.Comment">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into comment (type, blog_id, create_user_id, 
      create_user_name, create_time, content, 
      is_usable)
    values (#{type,jdbcType=INTEGER}, #{blogId,jdbcType=INTEGER}, #{createUserId,jdbcType=INTEGER},
      #{createUserName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{content,jdbcType=VARCHAR},
      #{isUsable,jdbcType=BIT})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.myblog.model.Comment">
    update comment
    set type = #{type,jdbcType=INTEGER},
      blog_id = #{blogId,jdbcType=INTEGER},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      create_user_name = #{createUserName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=VARCHAR},
      is_usable = #{isUsable,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, type, blog_id, create_user_id, create_user_name, create_time, content, 
    is_usable
    from comment
    where id = #{id,jdbcType=INTEGER}
    and is_usable = 1
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, type, blog_id, create_user_id, create_user_name, create_time, content, 
    is_usable
    from comment
    where is_usable = 1
  </select>
  <select id="pageAll" parameterType="com.myblog.model.Comment" resultMap="BaseResultMap">
    select id, type, blog_id, create_user_id, create_user_name, create_time, content,
    is_usable
    from comment
    where is_usable = 1
    and type = #{type}
    <if test="blogId != null">
      and blog_id = #{blogId}
    </if>
    order by create_time desc
    limit #{page},#{pageSize}
  </select>
  <select id="countAll" parameterType="com.myblog.model.Comment" resultType="java.lang.Long">
    SELECT count(0) FROM comment
    where is_usable = 1
    and type = #{type}
    <if test="blogId != null">
      and blog_id = #{blogId}
    </if>
  </select>
</mapper>